name: CI

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  codecov:
    name: Unit tests + coverage
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest-cov
        run: pytest --cov=tf_pwa --cov-report=xml --benchmark-disable
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests

  conda_install:
    name: conda install
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@master
      - name: Set up miniconda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
          bash ~/miniconda.sh -b -p ./miniconda
          export PATH=`pwd`/miniconda/bin:$PATH
          source ./miniconda/etc/profile.d/conda.sh
          conda activate
      - name: Install dependencies
        run: |
          conda install --file requirements-min.txt
          python -m pip install -e . --no-deps
      - name: Test imports
        run: python -c "import tf_pwa"

  pytest:
    name: Unit tests
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-10.15
          - ubuntu-18.04
        python-version: [3.6, 3.7, 3.8]
        exclude:
          - os: macos-10.15
            python-version: 3.6
          - os: macos-10.15
            python-version: 3.8
          - os: ubuntu-18.04 # coverage job
            python-version: 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: pytest

  documentation:
    name: Build documentation
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[doc]
          sudo apt-get -y install pandoc
      - name: Build HTML documentation
        working-directory: docs
        run: make html

  style:
    name: Style checks
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Perform style checks
        run: pre-commit run -a
